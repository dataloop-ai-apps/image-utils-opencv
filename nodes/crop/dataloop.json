{
  "displayName": "Crop box annotations to new images",
  "name": "image-utils-img-crop",
  "scope": "public",
  "version": "0.0.8",
  "description": "App to create new images from box annotations in image",
  "attributes": {
    "Provider": "Other",
    "Category": "Application",
    "Application Type": [
      "Pipeline Node"
    ]
  },
  "codebase": {
    "type": "git",
    "gitUrl": "https://github.com/dataloop-ai-apps/image-utils-opencv.git",
    "gitTag": "0.0.8"
  },
  "components": {
    "pipelineNodes": [
      {
        "invoke": {
          "type": "function",
          "namespace": "image-utils-img-crop.image_utils_img_crop.crop_images"
        },
        "categories": [
          "image-utils"
        ],
        "name": "crop_images",
        "displayName": "Crop Image",
        "description": "Crop Image to boxes",
        "scope": "node",
        "configuration": {
          "fields": [
            {
              "name": "name",
              "title": "Node Name",
              "props": {
                "title": true,
                "type": "string",
                "default": "Crop Image",
                "required": true,
                "placeholder": "Insert node name"
              },
              "rules": [
                {
                  "type": "required",
                  "effect": "error"
                }
              ],
              "widget": "dl-input"
            }
          ]
        }
      },
      {
        "invoke": {
          "type": "function",
          "namespace": "image-utils-img-crop.image_utils_img_crop.add_annotation_to_orig_image"
        },
        "categories": [
          "image-utils"
        ],
        "name": "add_annotation_to_orig_image",
        "displayName": "Crop to Origin",
        "description": "Update annotation to original image",
        "scope": "project",
        "configuration": {
          "fields": [
            {
              "name": "name",
              "title": "Node Name",
              "props": {
                "title": true,
                "type": "string",
                "default": "Crop to Origin",
                "required": true,
                "placeholder": "Insert node name"
              },
              "rules": [
                {
                  "type": "required",
                  "effect": "error"
                }
              ],
              "widget": "dl-input"
            }
          ]
        }
      }
    ],
    "modules": [
      {
        "name": "image_utils_img_crop",
        "entryPoint": "nodes/crop/crop.py",
        "className": "ServiceRunner",
        "initInputs": [],
        "functions": [
          {
            "name": "crop_images",
            "input": [
              {
                "type": "Item",
                "name": "item"
              }
            ],
            "output": [
              {
                "type": "Item[]",
                "name": "items"
              }
            ],
            "displayIcon": "icon-dl-crop"
          },
          {
            "name": "add_annotation_to_orig_image",
            "input": [
              {
                "type": "Item",
                "name": "item"
              }
            ],
            "output": [
              {
                "type": "Item[]",
                "name": "items"
              }
            ],
            "displayIcon": "icon-dl-merge-to-origin"
          }
        ]
      }
    ],
    "services": [
      {
        "name": "image-utils-img-crop",
        "moduleName": "image_utils_img_crop",
        "runtime": {
          "podType": "regular-xs",
          "runnerImage": "dataloopai/dtlpy-agent:cpu.py3.8.opencv4.7",
          "numReplicas": 1,
          "concurrency": 10,
          "singleAgent": false,
          "autoscaler": {
            "type": "rabbitmq",
            "minReplicas": 0,
            "maxReplicas": 2,
            "queueLength": 10
          },
          "preemptible": false
        },
        "executionTimeout": 172800,
        "drainTime": 600,
        "onReset": "failed",
        "runExecutionAsProcess": false,
        "maxAttempts": 3,
        "operation": "none"
      }
    ]
  }
}